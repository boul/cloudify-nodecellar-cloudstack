# cloudify.types contains Cloudify's built-in types, relationships, workflows etc...
imports:
    - http://www.getcloudify.org/spec/bash-plugin/1.0/plugin.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.0/plugin.yaml

plugins:
    cloudstack_exoscale_plugin:
        derived_from: cloudify.plugins.manager_plugin
        properties:
            url: https://github.com/boul/cloudify-cloudstack-plugin/archive/develop.zip
    cloudstack_plugin:
        derived_from: cloudify.plugins.manager_plugin
        properties:
            url: https://github.com/boul/cloudify-cloudstack-plugin/archive/develop.zip
    nodecellar_config_plugin:
        derived_from: cloudify.plugins.agent_plugin
        properties:
            folder: nodecellar-config-plugin


types:
    cloudstack_network:
        derived_from: cloudify.types.network
        properties:
            - auth:
                    API_KEY: 'api'
                    API_SECRET_KEY: 'secret'
                    API_URL: 'https://cloud/client/api'
            - network:
                    service_offering: SourceNatNiciraNvpNetwork
                    zone: 'BETA-SBP-DC-1'
            - rules: []

        interfaces:
            cloudify.interfaces.lifecycle:
                - create: cloudstack_plugin.network.create
                - delete: cloudstack_plugin.network.delete

    cloudstack_vm:
        derived_from: cloudify.types.host     
        properties:
            -   auth:
                    API_KEY: 'api'
                    API_SECRET_KEY: 'secret'
                    API_URL: 'https://cloud/client/api'

            -   install_agent: true            
            -   cloudify_agent:
                    user: root
                    port: 22
                    # example for ssh key file (see `key_name` below) 
                    # this file matches the agent key configured during the bootstrap
                    key: /root/.ssh/cloudify-agents-kp.pem
                # Uncomment and update `management_network_name` when working a n neutron enabled openstack
                # management_network_name: cloudify-admin-network
            -   server:

                ### if defined, will serve as the hostname for the started instance,
                ### otherwise, the node_id will be used
                 #name: no_name            ### HOST_NAME""
                    image_id: 8e6cb1ed-9c9a-4e5b-88f4-407437fd5eee
                    size: employee-medium-ha
                    keypair_name: cloudify-agents-kp
                    networks: ['node_cellar_network']
                    ip_address:
        interfaces:
            cloudify.interfaces.lifecycle:
                -   delete: cloudstack_plugin.virtual_machine_in_network.delete
                -   start: cloudstack_plugin.virtual_machine_in_network.start
                -   stop: cloudstack_plugin.virtual_machine_in_network.stop
            cloudify.interfaces.host:
                -   get_state: cloudstack_plugin.virtual_machine_in_network.get_state

    mongo_database:
        derived_from: cloudify.types.bash.db_server
        properties:
            -   role
            -   port

    nodejs_server:
        derived_from: cloudify.types.bash.app_server

    nodejs_app:
        derived_from: cloudify.types.bash.app_module
        properties:
            -   app_name
            -   startup_script
            -   git_url
            -   git_branch
            -   base_port
            -   num_instances

relationships:
    nodecellar_connected_to_mongo:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                - postconfigure: nodecellar_config_plugin.tasks.get_mongo_host_and_port
        properties:
            - env_file_path


blueprint:
    name: nodecellar_cloudstack
    nodes:
    
    - name: node_cellar_network
      type: cloudstack_network
      properties:
        network:
          name: node_cellar_network
          service_offering: SourceNatNiciraNvpNetwork
          zone: 'BETA-SBP-DC-1'

        rules:
              - cidr: 0.0.0.0/0
                start_port: 8080
              - cidr: 0.0.0.0/0
                start_port: 27017
              - cidr: 0.0.0.0/0
                start_port: 28017

    - name: mongod_vm
      type: cloudstack_vm
      instances:
          deploy: 1
      relationships:
        - target: node_cellar_network
          type: cloudify.relationships.contained_in
      properties:
          server:
              image_id: 8e6cb1ed-9c9a-4e5b-88f4-407437fd5eee
              size: employee-medium-ha
              keypair_name: cloudify-agents-kp
              networks: ['node_cellar_network']
              ip_address: 10.1.1.128

    - name: nodejs_vm
      type: cloudstack_vm
      instances:
          deploy: 1
      relationships:
        - target: node_cellar_network
          type: cloudify.relationships.contained_in

    - name: mongod
      type: mongo_database
      properties:
            role: mongod
            port: 27017
            scripts:            
                create: mongo-scripts/install-mongo.sh
                start: mongo-scripts/start-mongo.sh
                stop: mongo-scripts/stop-mongo.sh
      relationships:
        - target: mongod_vm
          type: cloudify.relationships.contained_in

    - name: nodejs
      type: nodejs_server
      properties:
            scripts:            
                create: nodejs-scripts/install-nodejs.sh
      relationships:
        - type: cloudify.relationships.contained_in
          target: nodejs_vm

    - name: nodecellar_app
      type: nodejs_app
      properties:
            app_name: nodecellar
            startup_script: server.js
            git_url: https://github.com/cloudify-cosmo/nodecellar.git
            git_branch: master 
            base_port: 8080
            num_instances: 1
            scripts:            
                create: nodejs-scripts/install-app.sh
                start: nodejs-scripts/start-app.sh
                stop: nodejs-scripts/stop-app.sh
      relationships:
        - type: cloudify.relationships.contained_in
          target: nodejs
        - type: nodecellar_connected_to_mongo 
          target: mongod
          properties:
            env_file_path: /tmp/mongo_host_and_port.sh

